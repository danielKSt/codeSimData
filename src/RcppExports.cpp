// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// calculateLocVar_physical
Rcpp::NumericVector calculateLocVar_physical(Rcpp::NumericVector inWin, Rcpp::NumericVector inShell, Rcpp::NumericVector insDiv, Rcpp::IntegerVector inDims);
RcppExport SEXP _codeSimData_calculateLocVar_physical(SEXP inWinSEXP, SEXP inShellSEXP, SEXP insDivSEXP, SEXP inDimsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type inWin(inWinSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type inShell(inShellSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type insDiv(insDivSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type inDims(inDimsSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateLocVar_physical(inWin, inShell, insDiv, inDims));
    return rcpp_result_gen;
END_RCPP
}
// calculateLocVar_periodic
Rcpp::NumericVector calculateLocVar_periodic(Rcpp::NumericVector inWin, Rcpp::NumericVector inShell, Rcpp::NumericVector insDiv, Rcpp::IntegerVector inDims);
RcppExport SEXP _codeSimData_calculateLocVar_periodic(SEXP inWinSEXP, SEXP inShellSEXP, SEXP insDivSEXP, SEXP inDimsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type inWin(inWinSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type inShell(inShellSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type insDiv(insDivSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type inDims(inDimsSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateLocVar_periodic(inWin, inShell, insDiv, inDims));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_codeSimData_calculateLocVar_physical", (DL_FUNC) &_codeSimData_calculateLocVar_physical, 4},
    {"_codeSimData_calculateLocVar_periodic", (DL_FUNC) &_codeSimData_calculateLocVar_periodic, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_codeSimData(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
